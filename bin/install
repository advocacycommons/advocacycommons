#!/usr/bin/env bash

# save directories
pushd `pwd`
scriptpath="$( cd "$(dirname "$0")" ; pwd -P )"
cd $scriptpath
source ./env

cd ..
projectroot=`pwd`

# read env

echo -e "${ANSI_PINK}Reading environment variables...${ANSI_NC}"
echo "  RUBY_VERSION=${AFFINITY_RUBY_VERSION}"
echo "  NODE_VERSION=${AFFINITY_NODE_VERSION}"
echo -e "${ANSI_GREEN}...read environment variables!${ANSI_NC}"

# install-o-rama!

echo -e "${ANSI_PINK}Installing system dependencies...${ANSI_NC}"

if [ `uname` == 'Darwin' ]; then
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  brew tap homebrew/services
  brew install yarn --without-node
  brew install postgresql redis
  sudo initdb /usr/local/var/postgres -E utf8 # initialise postgres db
elif [ `uname` == "Linux" ]; then # assume debian. sorry!
  sudo apt remove cmdtest # uses same command name as `yarn`
  sudo apt update -qq
  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  sudo apt update -qq
  sudo apt install -y yarn redis-server postgresql postgresql-client postgresql-all
fi

echo -e "${ANSI_GREEN}...system dependencies installed!${ANSI_NC}"

echo -e "${ANSI_PINK}Installing RVM and ruby dependencies...${ANSI_NC}"

curl -sSL https://rvm.io/mpapis.asc | gpg --import - # signing key
curl -sSL https://get.rvm.io | bash -s stable --ruby
source ~/.rvm/scripts/rvm # init rvm on mac
source /etc/profile.d/rvm.sh # init rvm on debian
source /usr/local/rvm/scripts/rvm # init rvm on ubuntu
rvm install ${AFFINITY_RUBY_VERSION}
rvm use "ruby-${AFFINITY_RUBY_VERSION}"
gem install bundler
bundle install

echo -e "${ANSI_GREEN}...ruby dependencies installed!${ANSI_NC}"

echo -e "${ANSI_PINK}Installing NVM and javascript dependencies...${ANSI_NC}"

curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc
echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"' >> ~/.bashrc
echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> ~/.bashrc
source ~/.bashrc
nvm install ${AFFINITY_NODE_VERSION}
nvm use ${AFFINITY_NODE_VERSION}
yarn install

echo -e "${ANSI_GREEN}...javascript dependencies installed.${ANSI_NC}"

echo -e "${ANSI_PINK}Configuring the development database...${ANSI_NC}"

sudo -u postgres createuser affinity -s &
  psql -c  "alter user affinity with encrypted password '${AFFINITY_DEV_DB_PASSWORD}';"

echo -e "${ANSI_GREEN}...development dabase configured!"

echo -e "${ANSI_PINK}"
echo "=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)"
echo "=)              ----------              =)"
echo "=)        Installation complete!        =)"
echo "=)              ----------              =)"
echo "=)           Run the app with:          =)"
echo "=)              ----------              =)"
echo "=)         $ ./bin/run-services         =)"
echo "=)           $ ./bin/run-web            =)"
echo "=)              ----------              =)"
echo "=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)=)"
echo -e "${ANSI_NC}"

popd
